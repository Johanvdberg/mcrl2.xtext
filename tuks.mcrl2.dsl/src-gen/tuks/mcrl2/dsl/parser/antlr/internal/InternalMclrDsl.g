/*
 * generated by Xtext 2.11.0.beta2
 */
grammar InternalMclrDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package tuks.mcrl2.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package tuks.mcrl2.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import tuks.mcrl2.dsl.services.MclrDslGrammarAccess;

}

@parser::members {

 	private MclrDslGrammarAccess grammarAccess;

    public InternalMclrDslParser(TokenStream input, MclrDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MclrDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('sort' | 'cons' | 'map' | 'var' | 'eqn' | 'glob' | 'act' | 'proc')=>
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getLeftMCRL2SpecEltParserRuleCall_0_0());
				}
				lv_left_0_0=rulemCRL2SpecElt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"left",
						lv_left_0_0,
						"tuks.mcrl2.dsl.MclrDsl.mCRL2SpecElt");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			('init')=>
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getInitInitParserRuleCall_1_0());
				}
				lv_init_1_0=ruleInit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"init",
						lv_init_1_0,
						"tuks.mcrl2.dsl.MclrDsl.Init");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('sort' | 'cons' | 'map' | 'var' | 'eqn' | 'glob' | 'act' | 'proc')=>
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getRightMCRL2SpecEltParserRuleCall_2_0());
				}
				lv_right_2_0=rulemCRL2SpecElt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"right",
						lv_right_2_0,
						"tuks.mcrl2.dsl.MclrDsl.mCRL2SpecElt");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleActionName
entryRuleActionName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionNameRule()); }
	iv_ruleActionName=ruleActionName
	{ $current=$iv_ruleActionName.current; }
	EOF;

// Rule ActionName
ruleActionName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getActionNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getActionNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleActionNameList
entryRuleActionNameList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionNameListRule()); }
	iv_ruleActionNameList=ruleActionNameList
	{ $current=$iv_ruleActionNameList.current; }
	EOF;

// Rule ActionNameList
ruleActionNameList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionNameListRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getActionNameListAccess().getId_listActionNameCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getActionNameListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionNameListRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getActionNameListAccess().getId_listActionNameCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getActionAccess().getIdActionNameCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getActionAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getExpDataExprListParserRuleCall_1_1_0());
					}
					lv_exp_2_0=ruleDataExprList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"exp",
							lv_exp_2_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExprList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getActionAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleActIdSet
entryRuleActIdSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActIdSetRule()); }
	iv_ruleActIdSet=ruleActIdSet
	{ $current=$iv_ruleActIdSet.current; }
	EOF;

// Rule ActIdSet
ruleActIdSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getActIdSetAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActIdSetAccess().getIdsActionNameListParserRuleCall_1_0());
				}
				lv_ids_1_0=ruleActionNameList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActIdSetRule());
					}
					set(
						$current,
						"ids",
						lv_ids_1_0,
						"tuks.mcrl2.dsl.MclrDsl.ActionNameList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getActIdSetAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getIdVarNameParserRuleCall_0_0());
				}
				lv_id_0_0=ruleVarName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"tuks.mcrl2.dsl.MclrDsl.VarName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getData_expDataExprParserRuleCall_2_0());
				}
				lv_data_exp_2_0=ruleDataExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"data_exp",
						lv_data_exp_2_0,
						"tuks.mcrl2.dsl.MclrDsl.DataExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAssignmentList
entryRuleAssignmentList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentListRule()); }
	iv_ruleAssignmentList=ruleAssignmentList
	{ $current=$iv_ruleAssignmentList.current; }
	EOF;

// Rule AssignmentList
ruleAssignmentList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentListAccess().getAssAssignmentParserRuleCall_0_0());
				}
				lv_ass_0_0=ruleAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentListRule());
					}
					add(
						$current,
						"ass",
						lv_ass_0_0,
						"tuks.mcrl2.dsl.MclrDsl.Assignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getAssignmentListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentListAccess().getAssAssignmentParserRuleCall_1_1_0());
					}
					lv_ass_2_0=ruleAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentListRule());
						}
						add(
							$current,
							"ass",
							lv_ass_2_0,
							"tuks.mcrl2.dsl.MclrDsl.Assignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleActList
entryRuleActList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActListRule()); }
	iv_ruleActList=ruleActList
	{ $current=$iv_ruleActList.current; }
	EOF;

// Rule ActList
ruleActList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActListAccess().getId_listActionNameParserRuleCall_0_0());
				}
				lv_id_list_0_0=ruleActionName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActListRule());
					}
					add(
						$current,
						"id_list",
						lv_id_list_0_0,
						"tuks.mcrl2.dsl.MclrDsl.ActionName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getActListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActListAccess().getId_listActionNameParserRuleCall_1_1_0());
					}
					lv_id_list_2_0=ruleActionName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActListRule());
						}
						add(
							$current,
							"id_list",
							lv_id_list_2_0,
							"tuks.mcrl2.dsl.MclrDsl.ActionName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleActDecl
entryRuleActDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActDeclRule()); }
	iv_ruleActDecl=ruleActDecl
	{ $current=$iv_ruleActDecl.current; }
	EOF;

// Rule ActDecl
ruleActDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActDeclAccess().getIdActListParserRuleCall_0_0());
				}
				lv_id_0_0=ruleActList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActDeclRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"tuks.mcrl2.dsl.MclrDsl.ActList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getActDeclAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActDeclAccess().getSortSortExprParserRuleCall_1_1_0());
					}
					lv_sort_2_0=ruleSortExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActDeclRule());
						}
						set(
							$current,
							"sort",
							lv_sort_2_0,
							"tuks.mcrl2.dsl.MclrDsl.SortExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getActDeclAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleActSpec
entryRuleActSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActSpecRule()); }
	iv_ruleActSpec=ruleActSpec
	{ $current=$iv_ruleActSpec.current; }
	EOF;

// Rule ActSpec
ruleActSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='act'
		{
			newLeafNode(otherlv_0, grammarAccess.getActSpecAccess().getActKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActSpecAccess().getAct_listActDeclParserRuleCall_1_0());
				}
				lv_act_list_1_0=ruleActDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActSpecRule());
					}
					add(
						$current,
						"act_list",
						lv_act_list_1_0,
						"tuks.mcrl2.dsl.MclrDsl.ActDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleBagEnumElt
entryRuleBagEnumElt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagEnumEltRule()); }
	iv_ruleBagEnumElt=ruleBagEnumElt
	{ $current=$iv_ruleBagEnumElt.current; }
	EOF;

// Rule BagEnumElt
ruleBagEnumElt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBagEnumEltAccess().getLeftDataExprParserRuleCall_0_0());
				}
				lv_left_0_0=ruleDataExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagEnumEltRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"tuks.mcrl2.dsl.MclrDsl.DataExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getBagEnumEltAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBagEnumEltAccess().getRightDataExprParserRuleCall_2_0());
				}
				lv_right_2_0=ruleDataExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagEnumEltRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"tuks.mcrl2.dsl.MclrDsl.DataExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBagEnumEltList
entryRuleBagEnumEltList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagEnumEltListRule()); }
	iv_ruleBagEnumEltList=ruleBagEnumEltList
	{ $current=$iv_ruleBagEnumEltList.current; }
	EOF;

// Rule BagEnumEltList
ruleBagEnumEltList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBagEnumEltListAccess().getBag_listBagEnumEltParserRuleCall_0_0());
				}
				lv_bag_list_0_0=ruleBagEnumElt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagEnumEltListRule());
					}
					add(
						$current,
						"bag_list",
						lv_bag_list_0_0,
						"tuks.mcrl2.dsl.MclrDsl.BagEnumElt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getBagEnumEltListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBagEnumEltListAccess().getBag_listBagEnumEltParserRuleCall_1_1_0());
					}
					lv_bag_list_2_0=ruleBagEnumElt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagEnumEltListRule());
						}
						add(
							$current,
							"bag_list",
							lv_bag_list_2_0,
							"tuks.mcrl2.dsl.MclrDsl.BagEnumElt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConstrName
entryRuleConstrName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstrNameRule()); }
	iv_ruleConstrName=ruleConstrName
	{ $current=$iv_ruleConstrName.current; }
	EOF;

// Rule ConstrName
ruleConstrName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getConstrNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getConstrNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleConstrDecl
entryRuleConstrDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstrDeclRule()); }
	iv_ruleConstrDecl=ruleConstrDecl
	{ $current=$iv_ruleConstrDecl.current; }
	EOF;

// Rule ConstrDecl
ruleConstrDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstrDeclAccess().getIdConstrNameParserRuleCall_0_0());
				}
				lv_id_0_0=ruleConstrName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstrDeclRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"tuks.mcrl2.dsl.MclrDsl.ConstrName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('(')=>
			(
				otherlv_1='('
				{
					newLeafNode(otherlv_1, grammarAccess.getConstrDeclAccess().getLeftParenthesisKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstrDeclAccess().getProjProjDeclListParserRuleCall_1_0_1_0());
						}
						lv_proj_2_0=ruleProjDeclList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstrDeclRule());
							}
							set(
								$current,
								"proj",
								lv_proj_2_0,
								"tuks.mcrl2.dsl.MclrDsl.ProjDeclList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=')'
				{
					newLeafNode(otherlv_3, grammarAccess.getConstrDeclAccess().getRightParenthesisKeyword_1_0_2());
				}
			)
		)?
		(
			('?')=>
			(
				otherlv_4='?'
				{
					newLeafNode(otherlv_4, grammarAccess.getConstrDeclAccess().getQuestionMarkKeyword_2_0_0());
				}
				(
					(
						lv_right_id_5_0=RULE_ID
						{
							newLeafNode(lv_right_id_5_0, grammarAccess.getConstrDeclAccess().getRight_idIDTerminalRuleCall_2_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConstrDeclRule());
							}
							setWithLastConsumed(
								$current,
								"right_id",
								lv_right_id_5_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleConstrDeclList
entryRuleConstrDeclList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstrDeclListRule()); }
	iv_ruleConstrDeclList=ruleConstrDeclList
	{ $current=$iv_ruleConstrDeclList.current; }
	EOF;

// Rule ConstrDeclList
ruleConstrDeclList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstrDeclListAccess().getDeclConstrDeclParserRuleCall_0_0());
				}
				lv_decl_0_0=ruleConstrDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstrDeclListRule());
					}
					add(
						$current,
						"decl",
						lv_decl_0_0,
						"tuks.mcrl2.dsl.MclrDsl.ConstrDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='|'
			{
				newLeafNode(otherlv_1, grammarAccess.getConstrDeclListAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstrDeclListAccess().getDeclConstrDeclParserRuleCall_1_1_0());
					}
					lv_decl_2_0=ruleConstrDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstrDeclListRule());
						}
						add(
							$current,
							"decl",
							lv_decl_2_0,
							"tuks.mcrl2.dsl.MclrDsl.ConstrDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConsSpec
entryRuleConsSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConsSpecRule()); }
	iv_ruleConsSpec=ruleConsSpec
	{ $current=$iv_ruleConsSpec.current; }
	EOF;

// Rule ConsSpec
ruleConsSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='cons'
		{
			newLeafNode(otherlv_0, grammarAccess.getConsSpecAccess().getConsKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConsSpecAccess().getIdsConstrNameParserRuleCall_1_0_0());
					}
					lv_ids_1_0=ruleConstrName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConsSpecRule());
						}
						add(
							$current,
							"ids",
							lv_ids_1_0,
							"tuks.mcrl2.dsl.MclrDsl.ConstrName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getConsSpecAccess().getSemicolonKeyword_1_1());
			}
		)+
	)
;

// Entry rule entryRuleDataName
entryRuleDataName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataNameRule()); }
	iv_ruleDataName=ruleDataName
	{ $current=$iv_ruleDataName.current; }
	EOF;

// Rule DataName
ruleDataName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getDataNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDataNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleDataExprUnit
entryRuleDataExprUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataExprUnitRule()); }
	iv_ruleDataExprUnit=ruleDataExprUnit
	{ $current=$iv_ruleDataExprUnit.current; }
	EOF;

// Rule DataExprUnit
ruleDataExprUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataExprUnitAccess().getLowerDataExprUnitTermParserRuleCall_0_0());
				}
				lv_lower_0_0=ruleDataExprUnitTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataExprUnitRule());
					}
					set(
						$current,
						"lower",
						lv_lower_0_0,
						"tuks.mcrl2.dsl.MclrDsl.DataExprUnitTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('(')=>
			(
				otherlv_1='('
				{
					newLeafNode(otherlv_1, grammarAccess.getDataExprUnitAccess().getLeftParenthesisKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataExprUnitAccess().getDataDataExprListParserRuleCall_1_0_1_0());
						}
						lv_data_2_0=ruleDataExprList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataExprUnitRule());
							}
							set(
								$current,
								"data",
								lv_data_2_0,
								"tuks.mcrl2.dsl.MclrDsl.DataExprList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=')'
				{
					newLeafNode(otherlv_3, grammarAccess.getDataExprUnitAccess().getRightParenthesisKeyword_1_0_2());
				}
			)
		)?
	)
;

// Entry rule entryRuleDataExprUnitTerm
entryRuleDataExprUnitTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataExprUnitTermRule()); }
	iv_ruleDataExprUnitTerm=ruleDataExprUnitTerm
	{ $current=$iv_ruleDataExprUnitTerm.current; }
	EOF;

// Rule DataExprUnitTerm
ruleDataExprUnitTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataExprUnitTermAccess().getIdDataNameParserRuleCall_0_0());
				}
				lv_id_0_0=ruleDataName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataExprUnitTermRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"tuks.mcrl2.dsl.MclrDsl.DataName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_number_1_0=RULE_INT
				{
					newLeafNode(lv_number_1_0, grammarAccess.getDataExprUnitTermAccess().getNumberINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataExprUnitTermRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				lv_is_true_2_0='true'
				{
					newLeafNode(lv_is_true_2_0, grammarAccess.getDataExprUnitTermAccess().getIs_trueTrueKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataExprUnitTermRule());
					}
					setWithLastConsumed($current, "is_true", true, "true");
				}
			)
		)
		    |
		(
			(
				lv_is_false_3_0='false'
				{
					newLeafNode(lv_is_false_3_0, grammarAccess.getDataExprUnitTermAccess().getIs_falseFalseKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataExprUnitTermRule());
					}
					setWithLastConsumed($current, "is_false", true, "false");
				}
			)
		)
		    |
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getDataExprUnitTermAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExprUnitTermAccess().getExpDataExprParserRuleCall_4_1_0());
					}
					lv_exp_5_0=ruleDataExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExprUnitTermRule());
						}
						set(
							$current,
							"exp",
							lv_exp_5_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataExprUnitTermAccess().getRightParenthesisKeyword_4_2());
			}
		)
		    |
		(
			(
				(
					(
						lv_is_exp_7_0='!'
						{
							newLeafNode(lv_is_exp_7_0, grammarAccess.getDataExprUnitTermAccess().getIs_expExclamationMarkKeyword_5_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataExprUnitTermRule());
							}
							setWithLastConsumed($current, "is_exp", true, "!");
						}
					)
				)
				    |
				(
					(
						lv_is_minus_8_0='-'
						{
							newLeafNode(lv_is_minus_8_0, grammarAccess.getDataExprUnitTermAccess().getIs_minusHyphenMinusKeyword_5_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataExprUnitTermRule());
							}
							setWithLastConsumed($current, "is_minus", true, "-");
						}
					)
				)
				    |
				(
					(
						lv_is_sharp_9_0='#'
						{
							newLeafNode(lv_is_sharp_9_0, grammarAccess.getDataExprUnitTermAccess().getIs_sharpNumberSignKeyword_5_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataExprUnitTermRule());
							}
							setWithLastConsumed($current, "is_sharp", true, "#");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExprUnitTermAccess().getUnitDataExprUnitParserRuleCall_5_1_0());
					}
					lv_unit_10_0=ruleDataExprUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExprUnitTermRule());
						}
						set(
							$current,
							"unit",
							lv_unit_10_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExprUnit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDataExpr
entryRuleDataExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataExprRule()); }
	iv_ruleDataExpr=ruleDataExpr
	{ $current=$iv_ruleDataExpr.current; }
	EOF;

// Rule DataExpr
ruleDataExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataExprAccess().getLeftDataExpr1ParserRuleCall_0_0());
				}
				lv_left_0_0=ruleDataExpr1
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataExprRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"tuks.mcrl2.dsl.MclrDsl.DataExpr1");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_1='['
				{
					newLeafNode(otherlv_1, grammarAccess.getDataExprAccess().getLeftSquareBracketKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataExprAccess().getRight_1DataExprParserRuleCall_1_0_1_0());
						}
						lv_right_1_2_0=ruleDataExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataExprRule());
							}
							set(
								$current,
								"right_1",
								lv_right_1_2_0,
								"tuks.mcrl2.dsl.MclrDsl.DataExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3='->'
				{
					newLeafNode(otherlv_3, grammarAccess.getDataExprAccess().getHyphenMinusGreaterThanSignKeyword_1_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataExprAccess().getRight_2DataExprParserRuleCall_1_0_3_0());
						}
						lv_right_2_4_0=ruleDataExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataExprRule());
							}
							set(
								$current,
								"right_2",
								lv_right_2_4_0,
								"tuks.mcrl2.dsl.MclrDsl.DataExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=']'
				{
					newLeafNode(otherlv_5, grammarAccess.getDataExprAccess().getRightSquareBracketKeyword_1_0_4());
				}
			)
			    |
			(
				otherlv_6='('
				{
					newLeafNode(otherlv_6, grammarAccess.getDataExprAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataExprAccess().getRightDataExprListParserRuleCall_1_1_1_0());
						}
						lv_right_7_0=ruleDataExprList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataExprRule());
							}
							set(
								$current,
								"right",
								lv_right_7_0,
								"tuks.mcrl2.dsl.MclrDsl.DataExprList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8=')'
				{
					newLeafNode(otherlv_8, grammarAccess.getDataExprAccess().getRightParenthesisKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleDataExpr1
entryRuleDataExpr1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataExpr1Rule()); }
	iv_ruleDataExpr1=ruleDataExpr1
	{ $current=$iv_ruleDataExpr1.current; }
	EOF;

// Rule DataExpr1
ruleDataExpr1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataExpr1Access().getLeftDataExpr2ParserRuleCall_0_0());
				}
				lv_left_0_0=ruleDataExpr2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataExpr1Rule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"tuks.mcrl2.dsl.MclrDsl.DataExpr2");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('+' | '-' | '/' | 'div' | 'mod' | '*')=>
				(
					otherlv_1='+'
					{
						newLeafNode(otherlv_1, grammarAccess.getDataExpr1Access().getPlusSignKeyword_1_0_0_0());
					}
					    |
					otherlv_2='-'
					{
						newLeafNode(otherlv_2, grammarAccess.getDataExpr1Access().getHyphenMinusKeyword_1_0_0_1());
					}
					    |
					otherlv_3='/'
					{
						newLeafNode(otherlv_3, grammarAccess.getDataExpr1Access().getSolidusKeyword_1_0_0_2());
					}
					    |
					otherlv_4='div'
					{
						newLeafNode(otherlv_4, grammarAccess.getDataExpr1Access().getDivKeyword_1_0_0_3());
					}
					    |
					otherlv_5='mod'
					{
						newLeafNode(otherlv_5, grammarAccess.getDataExpr1Access().getModKeyword_1_0_0_4());
					}
					    |
					otherlv_6='*'
					{
						newLeafNode(otherlv_6, grammarAccess.getDataExpr1Access().getAsteriskKeyword_1_0_0_5());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExpr1Access().getRightDataExprParserRuleCall_1_1_0());
					}
					lv_right_7_0=ruleDataExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExpr1Rule());
						}
						set(
							$current,
							"right",
							lv_right_7_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDataExpr2
entryRuleDataExpr2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataExpr2Rule()); }
	iv_ruleDataExpr2=ruleDataExpr2
	{ $current=$iv_ruleDataExpr2.current; }
	EOF;

// Rule DataExpr2
ruleDataExpr2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataExpr2Access().getLeftDataExprTermParserRuleCall_0_0());
				}
				lv_left_0_0=ruleDataExprTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataExpr2Rule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"tuks.mcrl2.dsl.MclrDsl.DataExprTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('=>' | '||' | '&&' | '==' | '!=' | '<' | '<=' | '>=' | '>' | 'in' | '|>' | '<|' | '++' | '.')=>
				(
					otherlv_1='=>'
					{
						newLeafNode(otherlv_1, grammarAccess.getDataExpr2Access().getEqualsSignGreaterThanSignKeyword_1_0_0_0());
					}
					    |
					otherlv_2='||'
					{
						newLeafNode(otherlv_2, grammarAccess.getDataExpr2Access().getVerticalLineVerticalLineKeyword_1_0_0_1());
					}
					    |
					otherlv_3='&&'
					{
						newLeafNode(otherlv_3, grammarAccess.getDataExpr2Access().getAmpersandAmpersandKeyword_1_0_0_2());
					}
					    |
					otherlv_4='=='
					{
						newLeafNode(otherlv_4, grammarAccess.getDataExpr2Access().getEqualsSignEqualsSignKeyword_1_0_0_3());
					}
					    |
					otherlv_5='!='
					{
						newLeafNode(otherlv_5, grammarAccess.getDataExpr2Access().getExclamationMarkEqualsSignKeyword_1_0_0_4());
					}
					    |
					otherlv_6='<'
					{
						newLeafNode(otherlv_6, grammarAccess.getDataExpr2Access().getLessThanSignKeyword_1_0_0_5());
					}
					    |
					otherlv_7='<='
					{
						newLeafNode(otherlv_7, grammarAccess.getDataExpr2Access().getLessThanSignEqualsSignKeyword_1_0_0_6());
					}
					    |
					otherlv_8='>='
					{
						newLeafNode(otherlv_8, grammarAccess.getDataExpr2Access().getGreaterThanSignEqualsSignKeyword_1_0_0_7());
					}
					    |
					otherlv_9='>'
					{
						newLeafNode(otherlv_9, grammarAccess.getDataExpr2Access().getGreaterThanSignKeyword_1_0_0_8());
					}
					    |
					otherlv_10='in'
					{
						newLeafNode(otherlv_10, grammarAccess.getDataExpr2Access().getInKeyword_1_0_0_9());
					}
					    |
					otherlv_11='|>'
					{
						newLeafNode(otherlv_11, grammarAccess.getDataExpr2Access().getVerticalLineGreaterThanSignKeyword_1_0_0_10());
					}
					    |
					otherlv_12='<|'
					{
						newLeafNode(otherlv_12, grammarAccess.getDataExpr2Access().getLessThanSignVerticalLineKeyword_1_0_0_11());
					}
					    |
					otherlv_13='++'
					{
						newLeafNode(otherlv_13, grammarAccess.getDataExpr2Access().getPlusSignPlusSignKeyword_1_0_0_12());
					}
					    |
					otherlv_14='.'
					{
						newLeafNode(otherlv_14, grammarAccess.getDataExpr2Access().getFullStopKeyword_1_0_0_13());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExpr2Access().getRightDataExprParserRuleCall_1_1_0());
					}
					lv_right_15_0=ruleDataExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExpr2Rule());
						}
						set(
							$current,
							"right",
							lv_right_15_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDataExprTerm
entryRuleDataExprTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataExprTermRule()); }
	iv_ruleDataExprTerm=ruleDataExprTerm
	{ $current=$iv_ruleDataExprTerm.current; }
	EOF;

// Rule DataExprTerm
ruleDataExprTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataExprTermRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDataExprTermAccess().getVar_idVarNameCrossReference_0_0());
				}
			)
		)
		    |
		(
			(
				lv_num_1_0=RULE_INT
				{
					newLeafNode(lv_num_1_0, grammarAccess.getDataExprTermAccess().getNumINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataExprTermRule());
					}
					setWithLastConsumed(
						$current,
						"num",
						lv_num_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				lv_is_true_2_0='true'
				{
					newLeafNode(lv_is_true_2_0, grammarAccess.getDataExprTermAccess().getIs_trueTrueKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataExprTermRule());
					}
					setWithLastConsumed($current, "is_true", true, "true");
				}
			)
		)
		    |
		(
			(
				lv_is_false_3_0='false'
				{
					newLeafNode(lv_is_false_3_0, grammarAccess.getDataExprTermAccess().getIs_falseFalseKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataExprTermRule());
					}
					setWithLastConsumed($current, "is_false", true, "false");
				}
			)
		)
		    |
		(
			(
				(
					lv_is_sqaure_bracket_4_0='['
					{
						newLeafNode(lv_is_sqaure_bracket_4_0, grammarAccess.getDataExprTermAccess().getIs_sqaure_bracketLeftSquareBracketKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataExprTermRule());
						}
						setWithLastConsumed($current, "is_sqaure_bracket", true, "[");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExprTermAccess().getData_listDataExprListParserRuleCall_4_1_0());
					}
					lv_data_list_5_0=ruleDataExprList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
						}
						set(
							$current,
							"data_list",
							lv_data_list_5_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExprList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataExprTermAccess().getRightSquareBracketKeyword_4_2());
			}
		)
		    |
		(
			(
				(
					lv_is_curly_bracket_7_0='{'
					{
						newLeafNode(lv_is_curly_bracket_7_0, grammarAccess.getDataExprTermAccess().getIs_curly_bracketLeftCurlyBracketKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataExprTermRule());
						}
						setWithLastConsumed($current, "is_curly_bracket", true, "{");
					}
				)
			)
			(
				(
					(
						lv_is_colon_8_0=':'
						{
							newLeafNode(lv_is_colon_8_0, grammarAccess.getDataExprTermAccess().getIs_colonColonKeyword_5_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataExprTermRule());
							}
							setWithLastConsumed($current, "is_colon", true, ":");
						}
					)
				)
				    |
				(
					('true' | 'false' | '[' | '{' | '(' | '!' | '-' | '#' | 'forall' | 'exists' | 'lambda' | RULE_ID | RULE_INT)=>
					(
						{
							newCompositeNode(grammarAccess.getDataExprTermAccess().getBagBagEnumEltListParserRuleCall_5_1_1_0());
						}
						lv_bag_9_0=ruleBagEnumEltList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
							}
							set(
								$current,
								"bag",
								lv_bag_9_0,
								"tuks.mcrl2.dsl.MclrDsl.BagEnumEltList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					('true' | 'false' | '[' | '{' | '(' | '!' | '-' | '#' | 'forall' | 'exists' | 'lambda' | RULE_ID | RULE_INT)=>
					(
						{
							newCompositeNode(grammarAccess.getDataExprTermAccess().getData_exp_listDataExprListParserRuleCall_5_1_2_0());
						}
						lv_data_exp_list_10_0=ruleDataExprList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
							}
							set(
								$current,
								"data_exp_list",
								lv_data_exp_list_10_0,
								"tuks.mcrl2.dsl.MclrDsl.DataExprList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(RULE_ID)=>
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getDataExprTermAccess().getVar_declVarsDeclParserRuleCall_5_1_3_0_0_0());
								}
								lv_var_decl_11_0=ruleVarsDecl
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
									}
									set(
										$current,
										"var_decl",
										lv_var_decl_11_0,
										"tuks.mcrl2.dsl.MclrDsl.VarsDecl");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_12='|'
						{
							newLeafNode(otherlv_12, grammarAccess.getDataExprTermAccess().getVerticalLineKeyword_5_1_3_0_1());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getDataExprTermAccess().getData_expDataExprParserRuleCall_5_1_3_0_2_0());
								}
								lv_data_exp_13_0=ruleDataExpr
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
									}
									set(
										$current,
										"data_exp",
										lv_data_exp_13_0,
										"tuks.mcrl2.dsl.MclrDsl.DataExpr");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
			)?
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getDataExprTermAccess().getRightCurlyBracketKeyword_5_2());
			}
		)
		    |
		(
			(
				(
					lv_is_round_bracket_15_0='('
					{
						newLeafNode(lv_is_round_bracket_15_0, grammarAccess.getDataExprTermAccess().getIs_round_bracketLeftParenthesisKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataExprTermRule());
						}
						setWithLastConsumed($current, "is_round_bracket", true, "(");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExprTermAccess().getData_expDataExprParserRuleCall_6_1_0());
					}
					lv_data_exp_16_0=ruleDataExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
						}
						set(
							$current,
							"data_exp",
							lv_data_exp_16_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getDataExprTermAccess().getRightParenthesisKeyword_6_2());
			}
		)
		    |
		(
			otherlv_18='!'
			{
				newLeafNode(otherlv_18, grammarAccess.getDataExprTermAccess().getExclamationMarkKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExprTermAccess().getData_expDataExprParserRuleCall_7_1_0());
					}
					lv_data_exp_19_0=ruleDataExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
						}
						set(
							$current,
							"data_exp",
							lv_data_exp_19_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_20='-'
			{
				newLeafNode(otherlv_20, grammarAccess.getDataExprTermAccess().getHyphenMinusKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExprTermAccess().getData_expDataExprParserRuleCall_8_1_0());
					}
					lv_data_exp_21_0=ruleDataExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
						}
						set(
							$current,
							"data_exp",
							lv_data_exp_21_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_22='#'
			{
				newLeafNode(otherlv_22, grammarAccess.getDataExprTermAccess().getNumberSignKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExprTermAccess().getData_expDataExprParserRuleCall_9_1_0());
					}
					lv_data_exp_23_0=ruleDataExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
						}
						set(
							$current,
							"data_exp",
							lv_data_exp_23_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					(
						lv_is_forall_24_0='forall'
						{
							newLeafNode(lv_is_forall_24_0, grammarAccess.getDataExprTermAccess().getIs_forallForallKeyword_10_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataExprTermRule());
							}
							setWithLastConsumed($current, "is_forall", true, "forall");
						}
					)
				)
				    |
				(
					(
						lv_is_exist_25_0='exists'
						{
							newLeafNode(lv_is_exist_25_0, grammarAccess.getDataExprTermAccess().getIs_existExistsKeyword_10_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataExprTermRule());
							}
							setWithLastConsumed($current, "is_exist", true, "exists");
						}
					)
				)
				    |
				(
					(
						lv_is_lambda_26_0='lambda'
						{
							newLeafNode(lv_is_lambda_26_0, grammarAccess.getDataExprTermAccess().getIs_lambdaLambdaKeyword_10_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataExprTermRule());
							}
							setWithLastConsumed($current, "is_lambda", true, "lambda");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExprTermAccess().getVar_listVarsDeclListParserRuleCall_10_1_0());
					}
					lv_var_list_27_0=ruleVarsDeclList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
						}
						set(
							$current,
							"var_list",
							lv_var_list_27_0,
							"tuks.mcrl2.dsl.MclrDsl.VarsDeclList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_28='.'
			{
				newLeafNode(otherlv_28, grammarAccess.getDataExprTermAccess().getFullStopKeyword_10_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExprTermAccess().getData_expDataExprParserRuleCall_10_3_0());
					}
					lv_data_exp_29_0=ruleDataExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExprTermRule());
						}
						set(
							$current,
							"data_exp",
							lv_data_exp_29_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDataExprList
entryRuleDataExprList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataExprListRule()); }
	iv_ruleDataExprList=ruleDataExprList
	{ $current=$iv_ruleDataExprList.current; }
	EOF;

// Rule DataExprList
ruleDataExprList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataExprListAccess().getData_expDataExprParserRuleCall_0_0());
				}
				lv_data_exp_0_0=ruleDataExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataExprListRule());
					}
					add(
						$current,
						"data_exp",
						lv_data_exp_0_0,
						"tuks.mcrl2.dsl.MclrDsl.DataExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getDataExprListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataExprListAccess().getData_expDataExprParserRuleCall_1_1_0());
					}
					lv_data_exp_2_0=ruleDataExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataExprListRule());
						}
						add(
							$current,
							"data_exp",
							lv_data_exp_2_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqnDecl
entryRuleEqnDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqnDeclRule()); }
	iv_ruleEqnDecl=ruleEqnDecl
	{ $current=$iv_ruleEqnDecl.current; }
	EOF;

// Rule EqnDecl
ruleEqnDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('true' | 'false' | '[' | '{' | '(' | '!' | '-' | '#' | 'forall' | 'exists' | 'lambda' | RULE_ID | RULE_INT)=>
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEqnDeclAccess().getCondDataExprParserRuleCall_0_0_0_0());
						}
						lv_cond_0_0=ruleDataExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEqnDeclRule());
							}
							set(
								$current,
								"cond",
								lv_cond_0_0,
								"tuks.mcrl2.dsl.MclrDsl.DataExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1='->'
				{
					newLeafNode(otherlv_1, grammarAccess.getEqnDeclAccess().getHyphenMinusGreaterThanSignKeyword_0_0_1());
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEqnDeclAccess().getLeftDataExprParserRuleCall_1_0());
				}
				lv_left_2_0=ruleDataExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqnDeclRule());
					}
					set(
						$current,
						"left",
						lv_left_2_0,
						"tuks.mcrl2.dsl.MclrDsl.DataExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getEqnDeclAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEqnDeclAccess().getRightDataExprParserRuleCall_3_0());
				}
				lv_right_4_0=ruleDataExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqnDeclRule());
					}
					set(
						$current,
						"right",
						lv_right_4_0,
						"tuks.mcrl2.dsl.MclrDsl.DataExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getEqnDeclAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleEqnSpec
entryRuleEqnSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqnSpecRule()); }
	iv_ruleEqnSpec=ruleEqnSpec
	{ $current=$iv_ruleEqnSpec.current; }
	EOF;

// Rule EqnSpec
ruleEqnSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEqnSpecAccess().getSpecVarSpecParserRuleCall_0_0());
				}
				lv_spec_0_0=ruleVarSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqnSpecRule());
					}
					set(
						$current,
						"spec",
						lv_spec_0_0,
						"tuks.mcrl2.dsl.MclrDsl.VarSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='eqn'
		{
			newLeafNode(otherlv_1, grammarAccess.getEqnSpecAccess().getEqnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEqnSpecAccess().getEqnEqnDeclParserRuleCall_2_0());
				}
				lv_eqn_2_0=ruleEqnDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqnSpecRule());
					}
					add(
						$current,
						"eqn",
						lv_eqn_2_0,
						"tuks.mcrl2.dsl.MclrDsl.EqnDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleMapSpec
entryRuleMapSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapSpecRule()); }
	iv_ruleMapSpec=ruleMapSpec
	{ $current=$iv_ruleMapSpec.current; }
	EOF;

// Rule MapSpec
ruleMapSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='map'
		{
			newLeafNode(otherlv_0, grammarAccess.getMapSpecAccess().getMapKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMapSpecAccess().getIdsSortIdsDeclParserRuleCall_1_0_0());
					}
					lv_ids_1_0=ruleSortIdsDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapSpecRule());
						}
						add(
							$current,
							"ids",
							lv_ids_1_0,
							"tuks.mcrl2.dsl.MclrDsl.SortIdsDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getMapSpecAccess().getSemicolonKeyword_1_1());
			}
		)+
	)
;

// Entry rule entryRuleMultActId
entryRuleMultActId returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultActIdRule()); }
	iv_ruleMultActId=ruleMultActId
	{ $current=$iv_ruleMultActId.current; }
	EOF;

// Rule MultActId
ruleMultActId returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultActIdRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getMultActIdAccess().getIdsActionNameCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='|'
			{
				newLeafNode(otherlv_1, grammarAccess.getMultActIdAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultActIdRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getMultActIdAccess().getIdsActionNameCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultActIdList
entryRuleMultActIdList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultActIdListRule()); }
	iv_ruleMultActIdList=ruleMultActIdList
	{ $current=$iv_ruleMultActIdList.current; }
	EOF;

// Rule MultActIdList
ruleMultActIdList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMultActIdListAccess().getActsMultActIdParserRuleCall_0_0());
				}
				lv_acts_0_0=ruleMultActId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultActIdListRule());
					}
					add(
						$current,
						"acts",
						lv_acts_0_0,
						"tuks.mcrl2.dsl.MclrDsl.MultActId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getMultActIdListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMultActIdListAccess().getActsMultActIdParserRuleCall_1_1_0());
					}
					lv_acts_2_0=ruleMultActId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultActIdListRule());
						}
						add(
							$current,
							"acts",
							lv_acts_2_0,
							"tuks.mcrl2.dsl.MclrDsl.MultActId");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultActIdSet
entryRuleMultActIdSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultActIdSetRule()); }
	iv_ruleMultActIdSet=ruleMultActIdSet
	{ $current=$iv_ruleMultActIdSet.current; }
	EOF;

// Rule MultActIdSet
ruleMultActIdSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultActIdSetAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMultActIdSetAccess().getDataMultActIdListParserRuleCall_1_0_0());
					}
					lv_data_1_0=ruleMultActIdList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultActIdSetRule());
						}
						set(
							$current,
							"data",
							lv_data_1_0,
							"tuks.mcrl2.dsl.MclrDsl.MultActIdList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_is_empty_2_0=RULE_WS
					{
						newLeafNode(lv_is_empty_2_0, grammarAccess.getMultActIdSetAccess().getIs_emptyWSTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultActIdSetRule());
						}
						setWithLastConsumed(
							$current,
							"is_empty",
							true,
							"org.eclipse.xtext.common.Terminals.WS");
					}
				)
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getMultActIdSetAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleProcDecl
entryRuleProcDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcDeclRule()); }
	iv_ruleProcDecl=ruleProcDecl
	{ $current=$iv_ruleProcDecl.current; }
	EOF;

// Rule ProcDecl
ruleProcDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProcDeclAccess().getIdProcNameParserRuleCall_0_0());
				}
				lv_id_0_0=ruleProcName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcDeclRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"tuks.mcrl2.dsl.MclrDsl.ProcName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getProcDeclAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcDeclAccess().getVariablesVarsDeclListParserRuleCall_1_1_0());
					}
					lv_variables_2_0=ruleVarsDeclList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcDeclRule());
						}
						set(
							$current,
							"variables",
							lv_variables_2_0,
							"tuks.mcrl2.dsl.MclrDsl.VarsDeclList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getProcDeclAccess().getRightParenthesisKeyword_1_2());
			}
		)?
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getProcDeclAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcDeclAccess().getRightProcExprParserRuleCall_3_0());
				}
				lv_right_5_0=ruleProcExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcDeclRule());
					}
					set(
						$current,
						"right",
						lv_right_5_0,
						"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getProcDeclAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleProcSpec
entryRuleProcSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcSpecRule()); }
	iv_ruleProcSpec=ruleProcSpec
	{ $current=$iv_ruleProcSpec.current; }
	EOF;

// Rule ProcSpec
ruleProcSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='proc'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcSpecAccess().getProcKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcSpecAccess().getProcsProcDeclParserRuleCall_1_0());
				}
				lv_procs_1_0=ruleProcDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcSpecRule());
					}
					add(
						$current,
						"procs",
						lv_procs_1_0,
						"tuks.mcrl2.dsl.MclrDsl.ProcDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleProjName
entryRuleProjName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjNameRule()); }
	iv_ruleProjName=ruleProjName
	{ $current=$iv_ruleProjName.current; }
	EOF;

// Rule ProjName
ruleProjName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getProjNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getProjNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleProjDecl
entryRuleProjDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjDeclRule()); }
	iv_ruleProjDecl=ruleProjDecl
	{ $current=$iv_ruleProjDecl.current; }
	EOF;

// Rule ProjDecl
ruleProjDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProjDeclAccess().getIdProjNameParserRuleCall_0_0_0());
					}
					lv_id_0_0=ruleProjName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjDeclRule());
						}
						set(
							$current,
							"id",
							lv_id_0_0,
							"tuks.mcrl2.dsl.MclrDsl.ProjName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getProjDeclAccess().getColonKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProjDeclAccess().getSortSortExprParserRuleCall_1_0());
				}
				lv_sort_2_0=ruleSortExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjDeclRule());
					}
					set(
						$current,
						"sort",
						lv_sort_2_0,
						"tuks.mcrl2.dsl.MclrDsl.SortExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProjDeclList
entryRuleProjDeclList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjDeclListRule()); }
	iv_ruleProjDeclList=ruleProjDeclList
	{ $current=$iv_ruleProjDeclList.current; }
	EOF;

// Rule ProjDeclList
ruleProjDeclList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProjDeclListAccess().getProjProjDeclParserRuleCall_0_0());
				}
				lv_proj_0_0=ruleProjDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjDeclListRule());
					}
					add(
						$current,
						"proj",
						lv_proj_0_0,
						"tuks.mcrl2.dsl.MclrDsl.ProjDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getProjDeclListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProjDeclListAccess().getProfProjDeclParserRuleCall_1_1_0());
					}
					lv_prof_2_0=ruleProjDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjDeclListRule());
						}
						add(
							$current,
							"prof",
							lv_prof_2_0,
							"tuks.mcrl2.dsl.MclrDsl.ProjDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleProcExpr
entryRuleProcExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcExprRule()); }
	iv_ruleProcExpr=ruleProcExpr
	{ $current=$iv_ruleProcExpr.current; }
	EOF;

// Rule ProcExpr
ruleProcExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProcExprAccess().getLeftProcExprTermParserRuleCall_0_0());
				}
				lv_left_0_0=ruleProcExprTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcExprRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"tuks.mcrl2.dsl.MclrDsl.ProcExprTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						(
							lv_is_plus_1_0='+'
							{
								newLeafNode(lv_is_plus_1_0, grammarAccess.getProcExprAccess().getIs_plusPlusSignKeyword_1_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProcExprRule());
								}
								setWithLastConsumed($current, "is_plus", true, "+");
							}
						)
					)
					    |
					(
						(
							lv_is_par_2_0='||'
							{
								newLeafNode(lv_is_par_2_0, grammarAccess.getProcExprAccess().getIs_parVerticalLineVerticalLineKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProcExprRule());
								}
								setWithLastConsumed($current, "is_par", true, "||");
							}
						)
					)
					    |
					(
						(
							lv_is_par_right_3_0='||_'
							{
								newLeafNode(lv_is_par_right_3_0, grammarAccess.getProcExprAccess().getIs_par_right_Keyword_1_0_0_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProcExprRule());
								}
								setWithLastConsumed($current, "is_par_right", true, "||_");
							}
						)
					)
					    |
					(
						(
							lv_is_left_shist_4_0='<<'
							{
								newLeafNode(lv_is_left_shist_4_0, grammarAccess.getProcExprAccess().getIs_left_shistLessThanSignLessThanSignKeyword_1_0_0_3_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProcExprRule());
								}
								setWithLastConsumed($current, "is_left_shist", true, "<<");
							}
						)
					)
					    |
					(
						(
							lv_is_point_5_0='.'
							{
								newLeafNode(lv_is_point_5_0, grammarAccess.getProcExprAccess().getIs_pointFullStopKeyword_1_0_0_4_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProcExprRule());
								}
								setWithLastConsumed($current, "is_point", true, ".");
							}
						)
					)
					    |
					(
						(
							lv_is_or_6_0='|'
							{
								newLeafNode(lv_is_or_6_0, grammarAccess.getProcExprAccess().getIs_orVerticalLineKeyword_1_0_0_5_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProcExprRule());
								}
								setWithLastConsumed($current, "is_or", true, "|");
							}
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getProcExprAccess().getRightProcExprParserRuleCall_1_0_1_0());
						}
						lv_right_7_0=ruleProcExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProcExprRule());
							}
							set(
								$current,
								"right",
								lv_right_7_0,
								"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						lv_is_at_8_0='@'
						{
							newLeafNode(lv_is_at_8_0, grammarAccess.getProcExprAccess().getIs_atCommercialAtKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getProcExprRule());
							}
							setWithLastConsumed($current, "is_at", true, "@");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getProcExprAccess().getUnit_rightDataExprUnitParserRuleCall_1_1_1_0());
						}
						lv_unit_right_9_0=ruleDataExprUnit
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProcExprRule());
							}
							set(
								$current,
								"unit_right",
								lv_unit_right_9_0,
								"tuks.mcrl2.dsl.MclrDsl.DataExprUnit");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleProcName
entryRuleProcName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcNameRule()); }
	iv_ruleProcName=ruleProcName
	{ $current=$iv_ruleProcName.current; }
	EOF;

// Rule ProcName
ruleProcName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getProcNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getProcNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleProcExprTerm
entryRuleProcExprTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcExprTermRule()); }
	iv_ruleProcExprTerm=ruleProcExprTerm
	{ $current=$iv_ruleProcExprTerm.current; }
	EOF;

// Rule ProcExprTerm
ruleProcExprTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(RULE_ID)=>
			(
				{
					newCompositeNode(grammarAccess.getProcExprTermAccess().getActionActionParserRuleCall_0_0());
				}
				lv_action_0_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
					}
					set(
						$current,
						"action",
						lv_action_0_0,
						"tuks.mcrl2.dsl.MclrDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(RULE_ID)=>
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getProcExprTermRule());
							}
						}
						otherlv_1=RULE_ID
						{
							newLeafNode(otherlv_1, grammarAccess.getProcExprTermAccess().getProc_idProcNameCrossReference_1_0_0_0());
						}
					)
				)
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getProcExprTermAccess().getLeftParenthesisKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProcExprTermAccess().getAssAssignmentListParserRuleCall_1_0_2_0());
						}
						lv_ass_3_0=ruleAssignmentList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
							}
							set(
								$current,
								"ass",
								lv_ass_3_0,
								"tuks.mcrl2.dsl.MclrDsl.AssignmentList");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getProcExprTermAccess().getRightParenthesisKeyword_1_0_3());
				}
			)
		)
		    |
		(
			(RULE_ID)=>
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getProcExprTermRule());
							}
						}
						otherlv_5=RULE_ID
						{
							newLeafNode(otherlv_5, grammarAccess.getProcExprTermAccess().getMap_idSortNameCrossReference_2_0_0_0());
						}
					)
				)
				otherlv_6='('
				{
					newLeafNode(otherlv_6, grammarAccess.getProcExprTermAccess().getLeftParenthesisKeyword_2_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProcExprTermAccess().getAssAssignmentListParserRuleCall_2_0_2_0());
						}
						lv_ass_7_0=ruleAssignmentList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
							}
							set(
								$current,
								"ass",
								lv_ass_7_0,
								"tuks.mcrl2.dsl.MclrDsl.AssignmentList");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_8=')'
				{
					newLeafNode(otherlv_8, grammarAccess.getProcExprTermAccess().getRightParenthesisKeyword_2_0_3());
				}
			)
		)
		    |
		(
			(
				lv_is_delta_9_0='delta'
				{
					newLeafNode(lv_is_delta_9_0, grammarAccess.getProcExprTermAccess().getIs_deltaDeltaKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcExprTermRule());
					}
					setWithLastConsumed($current, "is_delta", true, "delta");
				}
			)
		)
		    |
		(
			(
				lv_is_tau_10_0='tau'
				{
					newLeafNode(lv_is_tau_10_0, grammarAccess.getProcExprTermAccess().getIs_tauTauKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcExprTermRule());
					}
					setWithLastConsumed($current, "is_tau", true, "tau");
				}
			)
		)
		    |
		(
			(
				(
					lv_is_block_11_0='block'
					{
						newLeafNode(lv_is_block_11_0, grammarAccess.getProcExprTermAccess().getIs_blockBlockKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcExprTermRule());
						}
						setWithLastConsumed($current, "is_block", true, "block");
					}
				)
			)
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getProcExprTermAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getAct_setActIdSetParserRuleCall_5_2_0());
					}
					lv_act_set_13_0=ruleActIdSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"act_set",
							lv_act_set_13_0,
							"tuks.mcrl2.dsl.MclrDsl.ActIdSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14=','
			{
				newLeafNode(otherlv_14, grammarAccess.getProcExprTermAccess().getCommaKeyword_5_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getProc_expProcExprParserRuleCall_5_4_0());
					}
					lv_proc_exp_15_0=ruleProcExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"proc_exp",
							lv_proc_exp_15_0,
							"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getProcExprTermAccess().getRightParenthesisKeyword_5_5());
			}
		)
		    |
		(
			(
				(
					lv_is_allow_17_0='allow'
					{
						newLeafNode(lv_is_allow_17_0, grammarAccess.getProcExprTermAccess().getIs_allowAllowKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcExprTermRule());
						}
						setWithLastConsumed($current, "is_allow", true, "allow");
					}
				)
			)
			otherlv_18='('
			{
				newLeafNode(otherlv_18, grammarAccess.getProcExprTermAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getMulti_setMultActIdSetParserRuleCall_6_2_0());
					}
					lv_multi_set_19_0=ruleMultActIdSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"multi_set",
							lv_multi_set_19_0,
							"tuks.mcrl2.dsl.MclrDsl.MultActIdSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_20=','
			{
				newLeafNode(otherlv_20, grammarAccess.getProcExprTermAccess().getCommaKeyword_6_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getProc_expProcExprParserRuleCall_6_4_0());
					}
					lv_proc_exp_21_0=ruleProcExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"proc_exp",
							lv_proc_exp_21_0,
							"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_22=')'
			{
				newLeafNode(otherlv_22, grammarAccess.getProcExprTermAccess().getRightParenthesisKeyword_6_5());
			}
		)
		    |
		(
			(
				(
					lv_is_hide_23_0='hide'
					{
						newLeafNode(lv_is_hide_23_0, grammarAccess.getProcExprTermAccess().getIs_hideHideKeyword_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcExprTermRule());
						}
						setWithLastConsumed($current, "is_hide", true, "hide");
					}
				)
			)
			otherlv_24='('
			{
				newLeafNode(otherlv_24, grammarAccess.getProcExprTermAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getAct_setActIdSetParserRuleCall_7_2_0());
					}
					lv_act_set_25_0=ruleActIdSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"act_set",
							lv_act_set_25_0,
							"tuks.mcrl2.dsl.MclrDsl.ActIdSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_26=','
			{
				newLeafNode(otherlv_26, grammarAccess.getProcExprTermAccess().getCommaKeyword_7_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getProc_expProcExprParserRuleCall_7_4_0());
					}
					lv_proc_exp_27_0=ruleProcExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"proc_exp",
							lv_proc_exp_27_0,
							"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_28=')'
			{
				newLeafNode(otherlv_28, grammarAccess.getProcExprTermAccess().getRightParenthesisKeyword_7_5());
			}
		)
		    |
		(
			(
				('(')=>
				(
					lv_is_grp_29_0='('
					{
						newLeafNode(lv_is_grp_29_0, grammarAccess.getProcExprTermAccess().getIs_grpLeftParenthesisKeyword_8_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcExprTermRule());
						}
						setWithLastConsumed($current, "is_grp", true, "(");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getProc_expProcExprParserRuleCall_8_1_0());
					}
					lv_proc_exp_30_0=ruleProcExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"proc_exp",
							lv_proc_exp_30_0,
							"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_31=')'
			{
				newLeafNode(otherlv_31, grammarAccess.getProcExprTermAccess().getRightParenthesisKeyword_8_2());
			}
		)
		    |
		(
			(
				(
					lv_is_sum_32_0='sum'
					{
						newLeafNode(lv_is_sum_32_0, grammarAccess.getProcExprTermAccess().getIs_sumSumKeyword_9_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcExprTermRule());
						}
						setWithLastConsumed($current, "is_sum", true, "sum");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getVariablesVarsDeclListParserRuleCall_9_1_0());
					}
					lv_variables_33_0=ruleVarsDeclList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"variables",
							lv_variables_33_0,
							"tuks.mcrl2.dsl.MclrDsl.VarsDeclList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_34='.'
			{
				newLeafNode(otherlv_34, grammarAccess.getProcExprTermAccess().getFullStopKeyword_9_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getProc_expProcExprParserRuleCall_9_3_0());
					}
					lv_proc_exp_35_0=ruleProcExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"proc_exp",
							lv_proc_exp_35_0,
							"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getProcExprTermAccess().getDataExprUnitParserRuleCall_10_0());
			}
			this_DataExprUnit_36=ruleDataExprUnit
			{
				$current = $this_DataExprUnit_36.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_37='->'
			{
				newLeafNode(otherlv_37, grammarAccess.getProcExprTermAccess().getHyphenMinusGreaterThanSignKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getProc_expProcExprParserRuleCall_10_2_0());
					}
					lv_proc_exp_38_0=ruleProcExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"proc_exp",
							lv_proc_exp_38_0,
							"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_39='<>'
				{
					newLeafNode(otherlv_39, grammarAccess.getProcExprTermAccess().getLessThanSignGreaterThanSignKeyword_10_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProcExprTermAccess().getProc_exp_otherProcExprParserRuleCall_10_3_1_0());
						}
						lv_proc_exp_other_40_0=ruleProcExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
							}
							set(
								$current,
								"proc_exp_other",
								lv_proc_exp_other_40_0,
								"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			otherlv_41='dist'
			{
				newLeafNode(otherlv_41, grammarAccess.getProcExprTermAccess().getDistKeyword_11_0());
			}
			{
				newCompositeNode(grammarAccess.getProcExprTermAccess().getVarsDeclListParserRuleCall_11_1());
			}
			this_VarsDeclList_42=ruleVarsDeclList
			{
				$current = $this_VarsDeclList_42.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_43='['
			{
				newLeafNode(otherlv_43, grammarAccess.getProcExprTermAccess().getLeftSquareBracketKeyword_11_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getDataDataExprParserRuleCall_11_3_0());
					}
					lv_data_44_0=ruleDataExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"data",
							lv_data_44_0,
							"tuks.mcrl2.dsl.MclrDsl.DataExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_45=']'
			{
				newLeafNode(otherlv_45, grammarAccess.getProcExprTermAccess().getRightSquareBracketKeyword_11_4());
			}
			otherlv_46='.'
			{
				newLeafNode(otherlv_46, grammarAccess.getProcExprTermAccess().getFullStopKeyword_11_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcExprTermAccess().getProc_expProcExprParserRuleCall_11_6_0());
					}
					lv_proc_exp_47_0=ruleProcExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcExprTermRule());
						}
						set(
							$current,
							"proc_exp",
							lv_proc_exp_47_0,
							"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSortName
entryRuleSortName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortNameRule()); }
	iv_ruleSortName=ruleSortName
	{ $current=$iv_ruleSortName.current; }
	EOF;

// Rule SortName
ruleSortName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSortNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSortNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleSortIdList
entryRuleSortIdList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortIdListRule()); }
	iv_ruleSortIdList=ruleSortIdList
	{ $current=$iv_ruleSortIdList.current; }
	EOF;

// Rule SortIdList
ruleSortIdList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSortIdListAccess().getId_listSortNameParserRuleCall_0_0());
				}
				lv_id_list_0_0=ruleSortName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSortIdListRule());
					}
					add(
						$current,
						"id_list",
						lv_id_list_0_0,
						"tuks.mcrl2.dsl.MclrDsl.SortName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getSortIdListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSortIdListAccess().getId_listSortNameParserRuleCall_1_1_0());
					}
					lv_id_list_2_0=ruleSortName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSortIdListRule());
						}
						add(
							$current,
							"id_list",
							lv_id_list_2_0,
							"tuks.mcrl2.dsl.MclrDsl.SortName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSortIdsDecl
entryRuleSortIdsDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortIdsDeclRule()); }
	iv_ruleSortIdsDecl=ruleSortIdsDecl
	{ $current=$iv_ruleSortIdsDecl.current; }
	EOF;

// Rule SortIdsDecl
ruleSortIdsDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSortIdsDeclAccess().getIdSortIdListParserRuleCall_0_0());
				}
				lv_id_0_0=ruleSortIdList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSortIdsDeclRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"tuks.mcrl2.dsl.MclrDsl.SortIdList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSortIdsDeclAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSortIdsDeclAccess().getSortSortExprParserRuleCall_2_0());
				}
				lv_sort_2_0=ruleSortExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSortIdsDeclRule());
					}
					set(
						$current,
						"sort",
						lv_sort_2_0,
						"tuks.mcrl2.dsl.MclrDsl.SortExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSortExpr
entryRuleSortExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortExprRule()); }
	iv_ruleSortExpr=ruleSortExpr
	{ $current=$iv_ruleSortExpr.current; }
	EOF;

// Rule SortExpr
ruleSortExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSortExprAccess().getLeftSortExprTermParserRuleCall_0_0());
				}
				lv_left_0_0=ruleSortExprTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSortExprRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"tuks.mcrl2.dsl.MclrDsl.SortExprTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='->'
			{
				newLeafNode(otherlv_1, grammarAccess.getSortExprAccess().getHyphenMinusGreaterThanSignKeyword_1_0());
			}
			    |
			otherlv_2='#'
			{
				newLeafNode(otherlv_2, grammarAccess.getSortExprAccess().getNumberSignKeyword_1_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSortExprAccess().getRightSortExprParserRuleCall_2_0());
				}
				lv_right_3_0=ruleSortExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSortExprRule());
					}
					set(
						$current,
						"right",
						lv_right_3_0,
						"tuks.mcrl2.dsl.MclrDsl.SortExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSortExprTerm
entryRuleSortExprTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortExprTermRule()); }
	iv_ruleSortExprTerm=ruleSortExprTerm
	{ $current=$iv_ruleSortExprTerm.current; }
	EOF;

// Rule SortExprTerm
ruleSortExprTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_is_bool_0_0='Bool'
				{
					newLeafNode(lv_is_bool_0_0, grammarAccess.getSortExprTermAccess().getIs_boolBoolKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortExprTermRule());
					}
					setWithLastConsumed($current, "is_bool", true, "Bool");
				}
			)
		)
		    |
		(
			(
				lv_is_pos_1_0='Pos'
				{
					newLeafNode(lv_is_pos_1_0, grammarAccess.getSortExprTermAccess().getIs_posPosKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortExprTermRule());
					}
					setWithLastConsumed($current, "is_pos", true, "Pos");
				}
			)
		)
		    |
		(
			(
				lv_is_nat_2_0='Nat'
				{
					newLeafNode(lv_is_nat_2_0, grammarAccess.getSortExprTermAccess().getIs_natNatKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortExprTermRule());
					}
					setWithLastConsumed($current, "is_nat", true, "Nat");
				}
			)
		)
		    |
		(
			(
				lv_is_int_3_0='Int'
				{
					newLeafNode(lv_is_int_3_0, grammarAccess.getSortExprTermAccess().getIs_intIntKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortExprTermRule());
					}
					setWithLastConsumed($current, "is_int", true, "Int");
				}
			)
		)
		    |
		(
			(
				lv_is_real_4_0='Real'
				{
					newLeafNode(lv_is_real_4_0, grammarAccess.getSortExprTermAccess().getIs_realRealKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortExprTermRule());
					}
					setWithLastConsumed($current, "is_real", true, "Real");
				}
			)
		)
		    |
		(
			(
				(
					(
						lv_is_list_5_0='List'
						{
							newLeafNode(lv_is_list_5_0, grammarAccess.getSortExprTermAccess().getIs_listListKeyword_5_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSortExprTermRule());
							}
							setWithLastConsumed($current, "is_list", true, "List");
						}
					)
				)
				    |
				(
					(
						lv_set_6_0='Set'
						{
							newLeafNode(lv_set_6_0, grammarAccess.getSortExprTermAccess().getSetSetKeyword_5_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSortExprTermRule());
							}
							setWithLastConsumed($current, "set", true, "Set");
						}
					)
				)
				    |
				(
					(
						lv_bag_7_0='Bag'
						{
							newLeafNode(lv_bag_7_0, grammarAccess.getSortExprTermAccess().getBagBagKeyword_5_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSortExprTermRule());
							}
							setWithLastConsumed($current, "bag", true, "Bag");
						}
					)
				)
				    |
				(
					(
						lv_fset_8_0='FSet'
						{
							newLeafNode(lv_fset_8_0, grammarAccess.getSortExprTermAccess().getFsetFSetKeyword_5_0_3_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSortExprTermRule());
							}
							setWithLastConsumed($current, "fset", true, "FSet");
						}
					)
				)
				    |
				(
					(
						lv_fbag_9_0='FBag'
						{
							newLeafNode(lv_fbag_9_0, grammarAccess.getSortExprTermAccess().getFbagFBagKeyword_5_0_4_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSortExprTermRule());
							}
							setWithLastConsumed($current, "fbag", true, "FBag");
						}
					)
				)
			)
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getSortExprTermAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSortExprTermAccess().getExpSortExprParserRuleCall_5_2_0());
					}
					lv_exp_11_0=ruleSortExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSortExprTermRule());
						}
						set(
							$current,
							"exp",
							lv_exp_11_0,
							"tuks.mcrl2.dsl.MclrDsl.SortExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getSortExprTermAccess().getRightParenthesisKeyword_5_3());
			}
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortExprTermRule());
					}
				}
				otherlv_13=RULE_ID
				{
					newLeafNode(otherlv_13, grammarAccess.getSortExprTermAccess().getIdSortNameCrossReference_6_0());
				}
			)
		)
		    |
		(
			otherlv_14='('
			{
				newLeafNode(otherlv_14, grammarAccess.getSortExprTermAccess().getLeftParenthesisKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSortExprTermAccess().getExpSortExprParserRuleCall_7_1_0());
					}
					lv_exp_15_0=ruleSortExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSortExprTermRule());
						}
						set(
							$current,
							"exp",
							lv_exp_15_0,
							"tuks.mcrl2.dsl.MclrDsl.SortExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getSortExprTermAccess().getRightParenthesisKeyword_7_2());
			}
		)
		    |
		(
			otherlv_17='struct'
			{
				newLeafNode(otherlv_17, grammarAccess.getSortExprTermAccess().getStructKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSortExprTermAccess().getConstConstrDeclListParserRuleCall_8_1_0());
					}
					lv_const_18_0=ruleConstrDeclList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSortExprTermRule());
						}
						set(
							$current,
							"const",
							lv_const_18_0,
							"tuks.mcrl2.dsl.MclrDsl.ConstrDeclList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSortDecl
entryRuleSortDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortDeclRule()); }
	iv_ruleSortDecl=ruleSortDecl
	{ $current=$iv_ruleSortDecl.current; }
	EOF;

// Rule SortDecl
ruleSortDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSortDeclAccess().getIdSortNameParserRuleCall_0_0());
				}
				lv_id_0_0=ruleSortName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSortDeclRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"tuks.mcrl2.dsl.MclrDsl.SortName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSortDeclAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSortDeclAccess().getSortSortExprParserRuleCall_2_0());
				}
				lv_sort_2_0=ruleSortExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSortDeclRule());
					}
					set(
						$current,
						"sort",
						lv_sort_2_0,
						"tuks.mcrl2.dsl.MclrDsl.SortExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getSortDeclAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleSortSpec
entryRuleSortSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortSpecRule()); }
	iv_ruleSortSpec=ruleSortSpec
	{ $current=$iv_ruleSortSpec.current; }
	EOF;

// Rule SortSpec
ruleSortSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sort'
		{
			newLeafNode(otherlv_0, grammarAccess.getSortSpecAccess().getSortKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSortSpecAccess().getSortsSortDeclParserRuleCall_1_0());
				}
				lv_sorts_1_0=ruleSortDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSortSpecRule());
					}
					add(
						$current,
						"sorts",
						lv_sorts_1_0,
						"tuks.mcrl2.dsl.MclrDsl.SortDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleGlobVarSpec
entryRuleGlobVarSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobVarSpecRule()); }
	iv_ruleGlobVarSpec=ruleGlobVarSpec
	{ $current=$iv_ruleGlobVarSpec.current; }
	EOF;

// Rule GlobVarSpec
ruleGlobVarSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='glob'
		{
			newLeafNode(otherlv_0, grammarAccess.getGlobVarSpecAccess().getGlobKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGlobVarSpecAccess().getVars_listVarsDeclListParserRuleCall_1_0_0());
					}
					lv_vars_list_1_0=ruleVarsDeclList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGlobVarSpecRule());
						}
						add(
							$current,
							"vars_list",
							lv_vars_list_1_0,
							"tuks.mcrl2.dsl.MclrDsl.VarsDeclList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getGlobVarSpecAccess().getSemicolonKeyword_1_1());
			}
		)+
	)
;

// Entry rule entryRuleVarName
entryRuleVarName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarNameRule()); }
	iv_ruleVarName=ruleVarName
	{ $current=$iv_ruleVarName.current; }
	EOF;

// Rule VarName
ruleVarName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVarNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVarNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleVarIdList
entryRuleVarIdList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarIdListRule()); }
	iv_ruleVarIdList=ruleVarIdList
	{ $current=$iv_ruleVarIdList.current; }
	EOF;

// Rule VarIdList
ruleVarIdList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarIdListAccess().getId_listVarNameParserRuleCall_0_0());
				}
				lv_id_list_0_0=ruleVarName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarIdListRule());
					}
					add(
						$current,
						"id_list",
						lv_id_list_0_0,
						"tuks.mcrl2.dsl.MclrDsl.VarName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getVarIdListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarIdListAccess().getId_listVarNameParserRuleCall_1_1_0());
					}
					lv_id_list_2_0=ruleVarName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarIdListRule());
						}
						add(
							$current,
							"id_list",
							lv_id_list_2_0,
							"tuks.mcrl2.dsl.MclrDsl.VarName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleVarsDecl
entryRuleVarsDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarsDeclRule()); }
	iv_ruleVarsDecl=ruleVarsDecl
	{ $current=$iv_ruleVarsDecl.current; }
	EOF;

// Rule VarsDecl
ruleVarsDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarsDeclAccess().getIdVarIdListParserRuleCall_0_0());
				}
				lv_id_0_0=ruleVarIdList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarsDeclRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"tuks.mcrl2.dsl.MclrDsl.VarIdList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getVarsDeclAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarsDeclAccess().getSortSortExprParserRuleCall_2_0());
				}
				lv_sort_2_0=ruleSortExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarsDeclRule());
					}
					set(
						$current,
						"sort",
						lv_sort_2_0,
						"tuks.mcrl2.dsl.MclrDsl.SortExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVarsDeclList
entryRuleVarsDeclList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarsDeclListRule()); }
	iv_ruleVarsDeclList=ruleVarsDeclList
	{ $current=$iv_ruleVarsDeclList.current; }
	EOF;

// Rule VarsDeclList
ruleVarsDeclList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarsDeclListAccess().getVarialbesVarsDeclParserRuleCall_0_0());
				}
				lv_varialbes_0_0=ruleVarsDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarsDeclListRule());
					}
					add(
						$current,
						"varialbes",
						lv_varialbes_0_0,
						"tuks.mcrl2.dsl.MclrDsl.VarsDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getVarsDeclListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarsDeclListAccess().getVarialbesVarsDeclParserRuleCall_1_1_0());
					}
					lv_varialbes_2_0=ruleVarsDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarsDeclListRule());
						}
						add(
							$current,
							"varialbes",
							lv_varialbes_2_0,
							"tuks.mcrl2.dsl.MclrDsl.VarsDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleVarSpec
entryRuleVarSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarSpecRule()); }
	iv_ruleVarSpec=ruleVarSpec
	{ $current=$iv_ruleVarSpec.current; }
	EOF;

// Rule VarSpec
ruleVarSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getVarSpecAccess().getVarKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVarSpecAccess().getListVarsDeclListParserRuleCall_1_0_0());
					}
					lv_list_1_0=ruleVarsDeclList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarSpecRule());
						}
						add(
							$current,
							"list",
							lv_list_1_0,
							"tuks.mcrl2.dsl.MclrDsl.VarsDeclList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getSemicolonKeyword_1_1());
			}
		)+
	)
;

// Entry rule entryRulemCRL2SpecElt
entryRulemCRL2SpecElt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCRL2SpecEltRule()); }
	iv_rulemCRL2SpecElt=rulemCRL2SpecElt
	{ $current=$iv_rulemCRL2SpecElt.current; }
	EOF;

// Rule mCRL2SpecElt
rulemCRL2SpecElt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMCRL2SpecEltAccess().getSortSortSpecParserRuleCall_0_0());
				}
				lv_sort_0_0=ruleSortSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMCRL2SpecEltRule());
					}
					set(
						$current,
						"sort",
						lv_sort_0_0,
						"tuks.mcrl2.dsl.MclrDsl.SortSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMCRL2SpecEltAccess().getConstConsSpecParserRuleCall_1_0());
				}
				lv_const_1_0=ruleConsSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMCRL2SpecEltRule());
					}
					set(
						$current,
						"const",
						lv_const_1_0,
						"tuks.mcrl2.dsl.MclrDsl.ConsSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMCRL2SpecEltAccess().getMapMapSpecParserRuleCall_2_0());
				}
				lv_map_2_0=ruleMapSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMCRL2SpecEltRule());
					}
					set(
						$current,
						"map",
						lv_map_2_0,
						"tuks.mcrl2.dsl.MclrDsl.MapSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMCRL2SpecEltAccess().getEqnEqnSpecParserRuleCall_3_0());
				}
				lv_eqn_3_0=ruleEqnSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMCRL2SpecEltRule());
					}
					set(
						$current,
						"eqn",
						lv_eqn_3_0,
						"tuks.mcrl2.dsl.MclrDsl.EqnSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMCRL2SpecEltAccess().getBlobalGlobVarSpecParserRuleCall_4_0());
				}
				lv_blobal_4_0=ruleGlobVarSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMCRL2SpecEltRule());
					}
					set(
						$current,
						"blobal",
						lv_blobal_4_0,
						"tuks.mcrl2.dsl.MclrDsl.GlobVarSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMCRL2SpecEltAccess().getActActSpecParserRuleCall_5_0());
				}
				lv_act_5_0=ruleActSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMCRL2SpecEltRule());
					}
					set(
						$current,
						"act",
						lv_act_5_0,
						"tuks.mcrl2.dsl.MclrDsl.ActSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMCRL2SpecEltAccess().getProcProcSpecParserRuleCall_6_0());
				}
				lv_proc_6_0=ruleProcSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMCRL2SpecEltRule());
					}
					set(
						$current,
						"proc",
						lv_proc_6_0,
						"tuks.mcrl2.dsl.MclrDsl.ProcSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInit
entryRuleInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitRule()); }
	iv_ruleInit=ruleInit
	{ $current=$iv_ruleInit.current; }
	EOF;

// Rule Init
ruleInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='init'
		{
			newLeafNode(otherlv_0, grammarAccess.getInitAccess().getInitKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitAccess().getProcProcExprParserRuleCall_1_0());
				}
				lv_proc_1_0=ruleProcExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitRule());
					}
					set(
						$current,
						"proc",
						lv_proc_1_0,
						"tuks.mcrl2.dsl.MclrDsl.ProcExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getInitAccess().getSemicolonKeyword_2());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
