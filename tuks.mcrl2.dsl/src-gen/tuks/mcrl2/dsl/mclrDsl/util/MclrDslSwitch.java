/**
 * generated by Xtext 2.11.0.beta2
 */
package tuks.mcrl2.dsl.mclrDsl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import tuks.mcrl2.dsl.mclrDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see tuks.mcrl2.dsl.mclrDsl.MclrDslPackage
 * @generated
 */
public class MclrDslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MclrDslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MclrDslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MclrDslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MclrDslPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.ACTION_NAME:
      {
        ActionName actionName = (ActionName)theEObject;
        T result = caseActionName(actionName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.ACTION_NAME_LIST:
      {
        ActionNameList actionNameList = (ActionNameList)theEObject;
        T result = caseActionNameList(actionNameList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.ACTION:
      {
        Action action = (Action)theEObject;
        T result = caseAction(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.ACT_ID_SET:
      {
        ActIdSet actIdSet = (ActIdSet)theEObject;
        T result = caseActIdSet(actIdSet);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.ASSIGNMENT:
      {
        Assignment assignment = (Assignment)theEObject;
        T result = caseAssignment(assignment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.ASSIGNMENT_LIST:
      {
        AssignmentList assignmentList = (AssignmentList)theEObject;
        T result = caseAssignmentList(assignmentList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.ACT_LIST:
      {
        ActList actList = (ActList)theEObject;
        T result = caseActList(actList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.ACT_DECL:
      {
        ActDecl actDecl = (ActDecl)theEObject;
        T result = caseActDecl(actDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.ACT_SPEC:
      {
        ActSpec actSpec = (ActSpec)theEObject;
        T result = caseActSpec(actSpec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.BAG_ENUM_ELT:
      {
        BagEnumElt bagEnumElt = (BagEnumElt)theEObject;
        T result = caseBagEnumElt(bagEnumElt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.BAG_ENUM_ELT_LIST:
      {
        BagEnumEltList bagEnumEltList = (BagEnumEltList)theEObject;
        T result = caseBagEnumEltList(bagEnumEltList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.CONSTR_NAME:
      {
        ConstrName constrName = (ConstrName)theEObject;
        T result = caseConstrName(constrName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.CONSTR_DECL:
      {
        ConstrDecl constrDecl = (ConstrDecl)theEObject;
        T result = caseConstrDecl(constrDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.CONSTR_DECL_LIST:
      {
        ConstrDeclList constrDeclList = (ConstrDeclList)theEObject;
        T result = caseConstrDeclList(constrDeclList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.CONS_SPEC:
      {
        ConsSpec consSpec = (ConsSpec)theEObject;
        T result = caseConsSpec(consSpec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.DATA_NAME:
      {
        DataName dataName = (DataName)theEObject;
        T result = caseDataName(dataName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.DATA_EXPR_UNIT:
      {
        DataExprUnit dataExprUnit = (DataExprUnit)theEObject;
        T result = caseDataExprUnit(dataExprUnit);
        if (result == null) result = caseProcExprTerm(dataExprUnit);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.DATA_EXPR_UNIT_TERM:
      {
        DataExprUnitTerm dataExprUnitTerm = (DataExprUnitTerm)theEObject;
        T result = caseDataExprUnitTerm(dataExprUnitTerm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.DATA_EXPR:
      {
        DataExpr dataExpr = (DataExpr)theEObject;
        T result = caseDataExpr(dataExpr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.DATA_EXPR1:
      {
        DataExpr1 dataExpr1 = (DataExpr1)theEObject;
        T result = caseDataExpr1(dataExpr1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.DATA_EXPR2:
      {
        DataExpr2 dataExpr2 = (DataExpr2)theEObject;
        T result = caseDataExpr2(dataExpr2);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.DATA_EXPR_TERM:
      {
        DataExprTerm dataExprTerm = (DataExprTerm)theEObject;
        T result = caseDataExprTerm(dataExprTerm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.DATA_EXPR_LIST:
      {
        DataExprList dataExprList = (DataExprList)theEObject;
        T result = caseDataExprList(dataExprList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.EQN_DECL:
      {
        EqnDecl eqnDecl = (EqnDecl)theEObject;
        T result = caseEqnDecl(eqnDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.EQN_SPEC:
      {
        EqnSpec eqnSpec = (EqnSpec)theEObject;
        T result = caseEqnSpec(eqnSpec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.MAP_SPEC:
      {
        MapSpec mapSpec = (MapSpec)theEObject;
        T result = caseMapSpec(mapSpec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.MULT_ACT_ID:
      {
        MultActId multActId = (MultActId)theEObject;
        T result = caseMultActId(multActId);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.MULT_ACT_ID_LIST:
      {
        MultActIdList multActIdList = (MultActIdList)theEObject;
        T result = caseMultActIdList(multActIdList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.MULT_ACT_ID_SET:
      {
        MultActIdSet multActIdSet = (MultActIdSet)theEObject;
        T result = caseMultActIdSet(multActIdSet);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.PROC_DECL:
      {
        ProcDecl procDecl = (ProcDecl)theEObject;
        T result = caseProcDecl(procDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.PROC_SPEC:
      {
        ProcSpec procSpec = (ProcSpec)theEObject;
        T result = caseProcSpec(procSpec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.PROJ_NAME:
      {
        ProjName projName = (ProjName)theEObject;
        T result = caseProjName(projName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.PROJ_DECL:
      {
        ProjDecl projDecl = (ProjDecl)theEObject;
        T result = caseProjDecl(projDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.PROJ_DECL_LIST:
      {
        ProjDeclList projDeclList = (ProjDeclList)theEObject;
        T result = caseProjDeclList(projDeclList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.PROC_EXPR:
      {
        ProcExpr procExpr = (ProcExpr)theEObject;
        T result = caseProcExpr(procExpr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.PROC_NAME:
      {
        ProcName procName = (ProcName)theEObject;
        T result = caseProcName(procName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.PROC_EXPR_TERM:
      {
        ProcExprTerm procExprTerm = (ProcExprTerm)theEObject;
        T result = caseProcExprTerm(procExprTerm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.SORT_NAME:
      {
        SortName sortName = (SortName)theEObject;
        T result = caseSortName(sortName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.SORT_ID_LIST:
      {
        SortIdList sortIdList = (SortIdList)theEObject;
        T result = caseSortIdList(sortIdList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.SORT_IDS_DECL:
      {
        SortIdsDecl sortIdsDecl = (SortIdsDecl)theEObject;
        T result = caseSortIdsDecl(sortIdsDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.SORT_EXPR:
      {
        SortExpr sortExpr = (SortExpr)theEObject;
        T result = caseSortExpr(sortExpr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.SORT_EXPR_TERM:
      {
        SortExprTerm sortExprTerm = (SortExprTerm)theEObject;
        T result = caseSortExprTerm(sortExprTerm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.SORT_DECL:
      {
        SortDecl sortDecl = (SortDecl)theEObject;
        T result = caseSortDecl(sortDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.SORT_SPEC:
      {
        SortSpec sortSpec = (SortSpec)theEObject;
        T result = caseSortSpec(sortSpec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.GLOB_VAR_SPEC:
      {
        GlobVarSpec globVarSpec = (GlobVarSpec)theEObject;
        T result = caseGlobVarSpec(globVarSpec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.VAR_NAME:
      {
        VarName varName = (VarName)theEObject;
        T result = caseVarName(varName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.VAR_ID_LIST:
      {
        VarIdList varIdList = (VarIdList)theEObject;
        T result = caseVarIdList(varIdList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.VARS_DECL:
      {
        VarsDecl varsDecl = (VarsDecl)theEObject;
        T result = caseVarsDecl(varsDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.VARS_DECL_LIST:
      {
        VarsDeclList varsDeclList = (VarsDeclList)theEObject;
        T result = caseVarsDeclList(varsDeclList);
        if (result == null) result = caseProcExprTerm(varsDeclList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.VAR_SPEC:
      {
        VarSpec varSpec = (VarSpec)theEObject;
        T result = caseVarSpec(varSpec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.MCRL2_SPEC_ELT:
      {
        mCRL2SpecElt mCRL2SpecElt = (mCRL2SpecElt)theEObject;
        T result = casemCRL2SpecElt(mCRL2SpecElt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MclrDslPackage.INIT:
      {
        Init init = (Init)theEObject;
        T result = caseInit(init);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActionName(ActionName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action Name List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action Name List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActionNameList(ActionNameList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Act Id Set</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Act Id Set</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActIdSet(ActIdSet object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Assignment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Assignment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAssignment(Assignment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Assignment List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Assignment List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAssignmentList(AssignmentList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Act List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Act List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActList(ActList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Act Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Act Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActDecl(ActDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Act Spec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Act Spec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActSpec(ActSpec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bag Enum Elt</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bag Enum Elt</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBagEnumElt(BagEnumElt object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bag Enum Elt List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bag Enum Elt List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBagEnumEltList(BagEnumEltList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constr Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constr Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstrName(ConstrName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constr Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constr Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstrDecl(ConstrDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constr Decl List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constr Decl List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstrDeclList(ConstrDeclList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Cons Spec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Cons Spec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConsSpec(ConsSpec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataName(DataName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Expr Unit</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Expr Unit</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataExprUnit(DataExprUnit object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Expr Unit Term</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Expr Unit Term</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataExprUnitTerm(DataExprUnitTerm object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Expr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Expr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataExpr(DataExpr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Expr1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Expr1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataExpr1(DataExpr1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Expr2</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Expr2</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataExpr2(DataExpr2 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Expr Term</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Expr Term</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataExprTerm(DataExprTerm object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Expr List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Expr List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataExprList(DataExprList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Eqn Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Eqn Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEqnDecl(EqnDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Eqn Spec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Eqn Spec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEqnSpec(EqnSpec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Map Spec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Map Spec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMapSpec(MapSpec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mult Act Id</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mult Act Id</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultActId(MultActId object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mult Act Id List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mult Act Id List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultActIdList(MultActIdList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mult Act Id Set</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mult Act Id Set</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultActIdSet(MultActIdSet object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Proc Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Proc Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProcDecl(ProcDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Proc Spec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Proc Spec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProcSpec(ProcSpec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Proj Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Proj Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProjName(ProjName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Proj Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Proj Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProjDecl(ProjDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Proj Decl List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Proj Decl List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProjDeclList(ProjDeclList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Proc Expr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Proc Expr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProcExpr(ProcExpr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Proc Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Proc Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProcName(ProcName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Proc Expr Term</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Proc Expr Term</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProcExprTerm(ProcExprTerm object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sort Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sort Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSortName(SortName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sort Id List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sort Id List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSortIdList(SortIdList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sort Ids Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sort Ids Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSortIdsDecl(SortIdsDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sort Expr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sort Expr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSortExpr(SortExpr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sort Expr Term</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sort Expr Term</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSortExprTerm(SortExprTerm object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sort Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sort Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSortDecl(SortDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sort Spec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sort Spec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSortSpec(SortSpec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Glob Var Spec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Glob Var Spec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobVarSpec(GlobVarSpec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Var Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Var Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVarName(VarName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Var Id List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Var Id List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVarIdList(VarIdList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vars Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vars Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVarsDecl(VarsDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vars Decl List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vars Decl List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVarsDeclList(VarsDeclList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Var Spec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Var Spec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVarSpec(VarSpec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>mCRL2 Spec Elt</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>mCRL2 Spec Elt</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casemCRL2SpecElt(mCRL2SpecElt object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Init</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Init</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInit(Init object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MclrDslSwitch
