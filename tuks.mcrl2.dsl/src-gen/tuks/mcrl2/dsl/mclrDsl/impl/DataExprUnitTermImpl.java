/**
 * generated by Xtext 2.11.0.beta2
 */
package tuks.mcrl2.dsl.mclrDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import tuks.mcrl2.dsl.mclrDsl.DataExpr;
import tuks.mcrl2.dsl.mclrDsl.DataExprUnit;
import tuks.mcrl2.dsl.mclrDsl.DataExprUnitTerm;
import tuks.mcrl2.dsl.mclrDsl.DataName;
import tuks.mcrl2.dsl.mclrDsl.MclrDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Data Expr Unit Term</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitTermImpl#getId <em>Id</em>}</li>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitTermImpl#getNumber <em>Number</em>}</li>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitTermImpl#isIs_true <em>Is true</em>}</li>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitTermImpl#isIs_false <em>Is false</em>}</li>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitTermImpl#getExp <em>Exp</em>}</li>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitTermImpl#isIs_exp <em>Is exp</em>}</li>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitTermImpl#isIs_minus <em>Is minus</em>}</li>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitTermImpl#isIs_sharp <em>Is sharp</em>}</li>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitTermImpl#getUnit <em>Unit</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DataExprUnitTermImpl extends MinimalEObjectImpl.Container implements DataExprUnitTerm
{
  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected DataName id;

  /**
   * The default value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected static final int NUMBER_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected int number = NUMBER_EDEFAULT;

  /**
   * The default value of the '{@link #isIs_true() <em>Is true</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_true()
   * @generated
   * @ordered
   */
  protected static final boolean IS_TRUE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIs_true() <em>Is true</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_true()
   * @generated
   * @ordered
   */
  protected boolean is_true = IS_TRUE_EDEFAULT;

  /**
   * The default value of the '{@link #isIs_false() <em>Is false</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_false()
   * @generated
   * @ordered
   */
  protected static final boolean IS_FALSE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIs_false() <em>Is false</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_false()
   * @generated
   * @ordered
   */
  protected boolean is_false = IS_FALSE_EDEFAULT;

  /**
   * The cached value of the '{@link #getExp() <em>Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExp()
   * @generated
   * @ordered
   */
  protected DataExpr exp;

  /**
   * The default value of the '{@link #isIs_exp() <em>Is exp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_exp()
   * @generated
   * @ordered
   */
  protected static final boolean IS_EXP_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIs_exp() <em>Is exp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_exp()
   * @generated
   * @ordered
   */
  protected boolean is_exp = IS_EXP_EDEFAULT;

  /**
   * The default value of the '{@link #isIs_minus() <em>Is minus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_minus()
   * @generated
   * @ordered
   */
  protected static final boolean IS_MINUS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIs_minus() <em>Is minus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_minus()
   * @generated
   * @ordered
   */
  protected boolean is_minus = IS_MINUS_EDEFAULT;

  /**
   * The default value of the '{@link #isIs_sharp() <em>Is sharp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_sharp()
   * @generated
   * @ordered
   */
  protected static final boolean IS_SHARP_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIs_sharp() <em>Is sharp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_sharp()
   * @generated
   * @ordered
   */
  protected boolean is_sharp = IS_SHARP_EDEFAULT;

  /**
   * The cached value of the '{@link #getUnit() <em>Unit</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnit()
   * @generated
   * @ordered
   */
  protected DataExprUnit unit;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataExprUnitTermImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MclrDslPackage.Literals.DATA_EXPR_UNIT_TERM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataName getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetId(DataName newId, NotificationChain msgs)
  {
    DataName oldId = id;
    id = newId;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__ID, oldId, newId);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setId(DataName newId)
  {
    if (newId != id)
    {
      NotificationChain msgs = null;
      if (id != null)
        msgs = ((InternalEObject)id).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT_TERM__ID, null, msgs);
      if (newId != null)
        msgs = ((InternalEObject)newId).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT_TERM__ID, null, msgs);
      msgs = basicSetId(newId, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__ID, newId, newId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNumber(int newNumber)
  {
    int oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__NUMBER, oldNumber, number));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isIs_true()
  {
    return is_true;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIs_true(boolean newIs_true)
  {
    boolean oldIs_true = is_true;
    is_true = newIs_true;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_TRUE, oldIs_true, is_true));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isIs_false()
  {
    return is_false;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIs_false(boolean newIs_false)
  {
    boolean oldIs_false = is_false;
    is_false = newIs_false;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_FALSE, oldIs_false, is_false));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataExpr getExp()
  {
    return exp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExp(DataExpr newExp, NotificationChain msgs)
  {
    DataExpr oldExp = exp;
    exp = newExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__EXP, oldExp, newExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExp(DataExpr newExp)
  {
    if (newExp != exp)
    {
      NotificationChain msgs = null;
      if (exp != null)
        msgs = ((InternalEObject)exp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT_TERM__EXP, null, msgs);
      if (newExp != null)
        msgs = ((InternalEObject)newExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT_TERM__EXP, null, msgs);
      msgs = basicSetExp(newExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__EXP, newExp, newExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isIs_exp()
  {
    return is_exp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIs_exp(boolean newIs_exp)
  {
    boolean oldIs_exp = is_exp;
    is_exp = newIs_exp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_EXP, oldIs_exp, is_exp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isIs_minus()
  {
    return is_minus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIs_minus(boolean newIs_minus)
  {
    boolean oldIs_minus = is_minus;
    is_minus = newIs_minus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_MINUS, oldIs_minus, is_minus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isIs_sharp()
  {
    return is_sharp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIs_sharp(boolean newIs_sharp)
  {
    boolean oldIs_sharp = is_sharp;
    is_sharp = newIs_sharp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_SHARP, oldIs_sharp, is_sharp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataExprUnit getUnit()
  {
    return unit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUnit(DataExprUnit newUnit, NotificationChain msgs)
  {
    DataExprUnit oldUnit = unit;
    unit = newUnit;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__UNIT, oldUnit, newUnit);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUnit(DataExprUnit newUnit)
  {
    if (newUnit != unit)
    {
      NotificationChain msgs = null;
      if (unit != null)
        msgs = ((InternalEObject)unit).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT_TERM__UNIT, null, msgs);
      if (newUnit != null)
        msgs = ((InternalEObject)newUnit).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT_TERM__UNIT, null, msgs);
      msgs = basicSetUnit(newUnit, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT_TERM__UNIT, newUnit, newUnit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__ID:
        return basicSetId(null, msgs);
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__EXP:
        return basicSetExp(null, msgs);
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__UNIT:
        return basicSetUnit(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__ID:
        return getId();
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__NUMBER:
        return getNumber();
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_TRUE:
        return isIs_true();
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_FALSE:
        return isIs_false();
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__EXP:
        return getExp();
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_EXP:
        return isIs_exp();
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_MINUS:
        return isIs_minus();
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_SHARP:
        return isIs_sharp();
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__UNIT:
        return getUnit();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__ID:
        setId((DataName)newValue);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__NUMBER:
        setNumber((Integer)newValue);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_TRUE:
        setIs_true((Boolean)newValue);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_FALSE:
        setIs_false((Boolean)newValue);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__EXP:
        setExp((DataExpr)newValue);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_EXP:
        setIs_exp((Boolean)newValue);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_MINUS:
        setIs_minus((Boolean)newValue);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_SHARP:
        setIs_sharp((Boolean)newValue);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__UNIT:
        setUnit((DataExprUnit)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__ID:
        setId((DataName)null);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__NUMBER:
        setNumber(NUMBER_EDEFAULT);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_TRUE:
        setIs_true(IS_TRUE_EDEFAULT);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_FALSE:
        setIs_false(IS_FALSE_EDEFAULT);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__EXP:
        setExp((DataExpr)null);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_EXP:
        setIs_exp(IS_EXP_EDEFAULT);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_MINUS:
        setIs_minus(IS_MINUS_EDEFAULT);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_SHARP:
        setIs_sharp(IS_SHARP_EDEFAULT);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__UNIT:
        setUnit((DataExprUnit)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__ID:
        return id != null;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__NUMBER:
        return number != NUMBER_EDEFAULT;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_TRUE:
        return is_true != IS_TRUE_EDEFAULT;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_FALSE:
        return is_false != IS_FALSE_EDEFAULT;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__EXP:
        return exp != null;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_EXP:
        return is_exp != IS_EXP_EDEFAULT;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_MINUS:
        return is_minus != IS_MINUS_EDEFAULT;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__IS_SHARP:
        return is_sharp != IS_SHARP_EDEFAULT;
      case MclrDslPackage.DATA_EXPR_UNIT_TERM__UNIT:
        return unit != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (number: ");
    result.append(number);
    result.append(", is_true: ");
    result.append(is_true);
    result.append(", is_false: ");
    result.append(is_false);
    result.append(", is_exp: ");
    result.append(is_exp);
    result.append(", is_minus: ");
    result.append(is_minus);
    result.append(", is_sharp: ");
    result.append(is_sharp);
    result.append(')');
    return result.toString();
  }

} //DataExprUnitTermImpl
