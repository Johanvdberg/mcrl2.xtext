/**
 * generated by Xtext 2.11.0.beta2
 */
package tuks.mcrl2.dsl.mclrDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import tuks.mcrl2.dsl.mclrDsl.DataExprList;
import tuks.mcrl2.dsl.mclrDsl.DataExprUnit;
import tuks.mcrl2.dsl.mclrDsl.DataExprUnitTerm;
import tuks.mcrl2.dsl.mclrDsl.MclrDslPackage;
import tuks.mcrl2.dsl.mclrDsl.ProcExpr;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Data Expr Unit</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitImpl#getLower <em>Lower</em>}</li>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitImpl#getData <em>Data</em>}</li>
 *   <li>{@link tuks.mcrl2.dsl.mclrDsl.impl.DataExprUnitImpl#getProc_exp_other <em>Proc exp other</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DataExprUnitImpl extends ProcExprTermImpl implements DataExprUnit
{
  /**
   * The cached value of the '{@link #getLower() <em>Lower</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLower()
   * @generated
   * @ordered
   */
  protected DataExprUnitTerm lower;

  /**
   * The cached value of the '{@link #getData() <em>Data</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData()
   * @generated
   * @ordered
   */
  protected DataExprList data;

  /**
   * The cached value of the '{@link #getProc_exp_other() <em>Proc exp other</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProc_exp_other()
   * @generated
   * @ordered
   */
  protected ProcExpr proc_exp_other;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataExprUnitImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MclrDslPackage.Literals.DATA_EXPR_UNIT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataExprUnitTerm getLower()
  {
    return lower;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLower(DataExprUnitTerm newLower, NotificationChain msgs)
  {
    DataExprUnitTerm oldLower = lower;
    lower = newLower;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT__LOWER, oldLower, newLower);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLower(DataExprUnitTerm newLower)
  {
    if (newLower != lower)
    {
      NotificationChain msgs = null;
      if (lower != null)
        msgs = ((InternalEObject)lower).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT__LOWER, null, msgs);
      if (newLower != null)
        msgs = ((InternalEObject)newLower).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT__LOWER, null, msgs);
      msgs = basicSetLower(newLower, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT__LOWER, newLower, newLower));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataExprList getData()
  {
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetData(DataExprList newData, NotificationChain msgs)
  {
    DataExprList oldData = data;
    data = newData;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT__DATA, oldData, newData);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setData(DataExprList newData)
  {
    if (newData != data)
    {
      NotificationChain msgs = null;
      if (data != null)
        msgs = ((InternalEObject)data).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT__DATA, null, msgs);
      if (newData != null)
        msgs = ((InternalEObject)newData).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT__DATA, null, msgs);
      msgs = basicSetData(newData, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT__DATA, newData, newData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcExpr getProc_exp_other()
  {
    return proc_exp_other;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProc_exp_other(ProcExpr newProc_exp_other, NotificationChain msgs)
  {
    ProcExpr oldProc_exp_other = proc_exp_other;
    proc_exp_other = newProc_exp_other;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT__PROC_EXP_OTHER, oldProc_exp_other, newProc_exp_other);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setProc_exp_other(ProcExpr newProc_exp_other)
  {
    if (newProc_exp_other != proc_exp_other)
    {
      NotificationChain msgs = null;
      if (proc_exp_other != null)
        msgs = ((InternalEObject)proc_exp_other).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT__PROC_EXP_OTHER, null, msgs);
      if (newProc_exp_other != null)
        msgs = ((InternalEObject)newProc_exp_other).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclrDslPackage.DATA_EXPR_UNIT__PROC_EXP_OTHER, null, msgs);
      msgs = basicSetProc_exp_other(newProc_exp_other, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclrDslPackage.DATA_EXPR_UNIT__PROC_EXP_OTHER, newProc_exp_other, newProc_exp_other));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MclrDslPackage.DATA_EXPR_UNIT__LOWER:
        return basicSetLower(null, msgs);
      case MclrDslPackage.DATA_EXPR_UNIT__DATA:
        return basicSetData(null, msgs);
      case MclrDslPackage.DATA_EXPR_UNIT__PROC_EXP_OTHER:
        return basicSetProc_exp_other(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MclrDslPackage.DATA_EXPR_UNIT__LOWER:
        return getLower();
      case MclrDslPackage.DATA_EXPR_UNIT__DATA:
        return getData();
      case MclrDslPackage.DATA_EXPR_UNIT__PROC_EXP_OTHER:
        return getProc_exp_other();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MclrDslPackage.DATA_EXPR_UNIT__LOWER:
        setLower((DataExprUnitTerm)newValue);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT__DATA:
        setData((DataExprList)newValue);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT__PROC_EXP_OTHER:
        setProc_exp_other((ProcExpr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MclrDslPackage.DATA_EXPR_UNIT__LOWER:
        setLower((DataExprUnitTerm)null);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT__DATA:
        setData((DataExprList)null);
        return;
      case MclrDslPackage.DATA_EXPR_UNIT__PROC_EXP_OTHER:
        setProc_exp_other((ProcExpr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MclrDslPackage.DATA_EXPR_UNIT__LOWER:
        return lower != null;
      case MclrDslPackage.DATA_EXPR_UNIT__DATA:
        return data != null;
      case MclrDslPackage.DATA_EXPR_UNIT__PROC_EXP_OTHER:
        return proc_exp_other != null;
    }
    return super.eIsSet(featureID);
  }

} //DataExprUnitImpl
